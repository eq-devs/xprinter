group = "com.eq.xprinter"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
//        flatDir {
//            dirs project(':printer-lib').file('libs')
//        }
    }

    dependencies {
//        classpath("com.android.tools.build:gradle:8.7.0")
        classpath("com.android.tools.build:gradle:8.4.1")

        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.eq.xprinter"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
            implementation fileTree(dir: 'libs/printer-lib-extracted', include: ['*.jar'])
            implementation files('libs/printer-lib-extracted/classes.jar')

        // implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
//        implementation(fileTree(mapOf("dir" to "libs", "include" to listOf("*.jar", "*.aar"))))
//        implementation fileTree(dir: 'libs', include: ['*.jar'])
//        implementation files('libs/printer-lib-3.2.0')

//        implementation fileTree(include: ['*.jar'], dir: 'libs')
//        implementation files('libs/printer-lib-3.2.0.aar')
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
